#!/usr/bin/env python3

# requires: yay

# modified from https://github.com/vivien/i3blocks-contrib/tree/master/arch-update
# format: {official repo packages count}+{AUR packages count}{* if matches WATCH}
# use yay for AUR check
# add timeout for subprocess calls

#
# Copyright (C) 2017 Marcel Patzwahl
# Licensed under the terms of the GNU GPL v3 only.
#
# i3blocks blocklet script to see the available updates of pacman and the AUR

from os import getenv
from subprocess import check_output
from sys import stderr

BASE_COLOR = "white"
UPDATE_COLOR = "lime"
ERROR_COLOR = "red"


def check_updates(cmd):
    try:
        output = check_output(cmd, encoding="utf-8", timeout=15)
        updates = [line for line in output.split('\n') if line]
        color = UPDATE_COLOR if len(updates) > 0 else BASE_COLOR
        return True, updates, color
    except Exception as e:
        print(e, file=stderr)
        return False, [], ERROR_COLOR


if __name__ == '__main__':
    repo_updated, repo_updates, repo_color = check_updates(["yay", "-Qu", "--repo"])
    aur_updated, aur_updates, aur_color = check_updates(["yay", "-Qua"])

    repo_count = len(repo_updates)
    aur_count = len(aur_updates)

    message = f"<span color='{repo_color}'>{repo_count}</span>+<span color='{aur_color}'>{aur_count}</span>"
    print(message)

    if repo_count + aur_count > 0:
        if repo_count > 5:
            repo_updates = repo_updates[:5] + ["..."]
        if aur_count > 5:
            aur_updates = aur_updates[:5] + ["..."]

        details = "\r".join(repo_updates + aur_updates)

        print(details)

        if getenv("BLOCK_BUTTON") is not None:
            check_output(["/usr/bin/notify-send", "Available system update(s):", details])

